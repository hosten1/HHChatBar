//
//  LDChatListModelTest.m
//  Linkdood
//
//  Created by renxin on 16/6/7.
//  Copyright © 2016年 xiong qing. All rights reserved.
//

#import <XCTest/XCTest.h>
#import <SDKClient/SDKClient.h>
#import "LDTextTool.h"

@interface LDChatListModelTest : XCTestCase
@property(nonatomic,strong)LDClient *client;
@property(nonatomic,strong)LDTextTool *textTool;
@property(nonatomic,strong)LDChatModel *chatModel;
@property(nonatomic,strong)LDContactModel *contactModel;

@end

@implementation LDChatListModelTest

- (void)setUp {
    [super setUp];
    _client = [LDClient sharedInstance];
    _textTool = [[LDTextTool alloc] init];
    _chatModel = [[LDChatModel alloc] initWithID:4328622215];
    _contactModel = [[LDContactModel alloc] initWithID:4328622215];
}

- (void)tearDown {
    // Put teardown code here. This method is called after the invocation of each test method in the class.
    [super tearDown];
}


//通过关键字搜索chat对象
-(void)testSearchChatWithKeyword{
    __block BOOL done = NO;
    [_client.chatListModel searchChatWithKeyword:@"aaa" completion:^(NSError *error, NSArray *chats) {
        done = !error;
        XCTAssertTrue(!error,@"搜索成功");
        XCTAssertEqual(chats.count, 1, @"");
    }];
    [_textTool waitFor:&done timeout:6];
}

//删除会话记录
-(void)testRemoveChatRecord{
    __block BOOL done = NO;
    [_client.chatListModel removeChatRecord:_chatModel completion:^(NSError *error) {
        done = !error;
        LDChatListModel *listMoldel = _client.chatListModel;
        for (int a = 0; a<[[listMoldel allItems]count]; a++) {
            LDChatModel *model = [listMoldel allItems][a];
            XCTAssertNotEqual(model.ID, _chatModel.ID,@"");
        }
        XCTAssertTrue(!error,@"删除成功");
    }];
    [_textTool waitFor:&done timeout:6];
}

//删除历史消息
-(void)testRemoveHistoryMessageFor{
    __block BOOL done = NO;
    LDItemModel *itemModel = (LDItemModel *)_contactModel;
    [_client.chatListModel removeHistoryMessageFor:itemModel completion:^(NSError *error) {
        done = !error;
        LDChatListModel *listMoldel = _client.chatListModel;
        for (int a = 0; a<[[listMoldel allItems]count]; a++) {
            LDChatModel *model = [listMoldel allItems][a];
            XCTAssertNotEqual(model.ID, _chatModel.ID,@"");
        }
        XCTAssertTrue(!error,@"删除历史纪录成功");
    }];
    [_textTool waitFor:&done timeout:6];
}

//置顶会话
-(void)testMakeTopChat{
    __block BOOL done = NO;
    BOOL chatTop = _chatModel.isTopChat;
    [_client.chatListModel makeTopChat:_chatModel completion:^(NSError *error) {
        done = !error;
        XCTAssertNotEqual(chatTop, _chatModel.isTopChat,@"");
        XCTAssertTrue(!error,@"消息置顶");
    }];
    [_textTool waitFor:&done timeout:6];
}

//获取房间列表
-(void)testRoomList{
    __block BOOL done = NO;
    [_client.chatListModel roomList:^(NSError *error, LDRoomListModel *roomList) {
        done = !error;
        XCTAssertTrue(!error,@"获取房间");
    }];
    [_textTool waitFor:&done timeout:6];
}



@end
