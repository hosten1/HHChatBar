//
//  LDUserInfonationModelTest.m
//  Linkdood
//
//  Created by VRV2 on 16/6/7.
//  Copyright © 2016年 xiong qing. All rights reserved.
//

#import <XCTest/XCTest.h>
#import <SDKClient/SDKClient.h>
#import "LDTextTool.h"

@interface LDUserInfonationModelTest : XCTestCase
@property(nonatomic,strong)LDClient *client;
@property(nonatomic,strong)LDTextTool *utiles;


@end

@implementation LDUserInfonationModelTest

- (void)setUp {
    [super setUp];
    LDClient *client =  [LDClient sharedInstance];
    _client = client;
    _utiles = [[LDTextTool alloc]init];
}

-(void)testModifyBaseMyselfAvatar_modifyMyselfHeader{
    __block BOOL done = NO;
     LDMyselfModel *myself = MYSELF;
    UIImage *image = [UIImage imageNamed:@"Personal_info_men"];
    
    NSTimeInterval time = [[NSDate date] timeIntervalSince1970] * 1000;
    
    NSString *avatar_Path = [APP_TMPPATH stringByAppendingPathComponent:[NSString stringWithFormat:@"avatar_%f.jpg", time]];
    [UIImageJPEGRepresentation(image,0.6) writeToFile:avatar_Path atomically:YES];
    NSString *srcAvatar_Path = [APP_TMPPATH stringByAppendingPathComponent:[NSString stringWithFormat:@"srcAvatar_%f.jpg",time]];
    [UIImageJPEGRepresentation(image,0.8) writeToFile:srcAvatar_Path atomically:YES];
    
    myself.avatar = avatar_Path;
    myself.srcAvatar = srcAvatar_Path;
    
    [myself modifyMyselfHeader:^(NSError *error, LDMyselfModel *myself) {
        
         XCTAssertTrue(!error,@"修改个人头像信息");
         done = !error;
 
    }];
    XCTAssertTrue([self.utiles waitFor:&done timeout:3],
                  @"Timed out waiting for response asynch method completion");
    
}

-(void)testModifyBaseMyselfInfonation_modifyMyselfBasicInfo{
    __block BOOL done = NO;
    LDMyselfModel *myself = MYSELF;
    
    myself.name = @"简简单单";
    myself.nickID = @"283018";
    myself.sign = @"哈哈，我刚刚改了签名";
    myself.sex = 1;
    myself.area = @"陕西西安";
    MYSELF.birthday = 19920102;
    [myself  modifyMyselfBasicInfo:^(NSError *error, LDMyselfModel *myself) {
        XCTAssertTrue(!error,@"修改个人信息");
        XCTAssertTrue([myself.name isEqualToString:@"简简单单"],@"昵称修改成功");
        XCTAssertTrue([myself.nickID isEqualToString:@"283018"],@"豆豆号修改成功");
        XCTAssertTrue([myself.sign isEqualToString:@"哈哈，我刚刚改了签名"],@"签名修改成功");
        XCTAssertEqual(myself.sex, 1,@"性别修改成功");
        XCTAssertTrue([myself.area isEqualToString:@"陕西西安"],@"地址修改成功");
        done = !error;
        
    }];
    XCTAssertTrue([self.utiles waitFor:&done timeout:3],
                  @"Timed out waiting for response asynch method completion");
    
}
-(void)testGetMyselfConfigure{
    __block BOOL done = NO;
    LDMyselfModel *myself = MYSELF;
   NSNumber *num =  [myself myselfConfigure:config_birthday];
    XCTAssertTrue([num intValue] != 0,@"获取个人设置项");
    
}

-(void)testSearchPhone_modifyMyselfSetting{
    __block BOOL done = NO;
    LDMyselfModel *myself = MYSELF;

    [myself modifyMyselfSetting:setting_checkPhone completion:^(NSError *error) {
        XCTAssertTrue(!error,@"通过电话号搜索");
        done = !error;

    }];
    XCTAssertTrue([self.utiles waitFor:&done timeout:3],
                  @"Timed out waiting for response asynch method completion");
}
-(void)testSearchEmail_modifyMyselfSetting{
     LDMyselfModel *myself = MYSELF;
       __block BOOL done = NO;
    [myself modifyMyselfSetting:setting_checkEmail completion:^(NSError *error) {
        XCTAssertTrue(!error,@"通过邮箱号号搜索");
        done = !error;

           }];
    XCTAssertTrue([self.utiles waitFor:&done timeout:3],
                  @"Timed out waiting for response asynch method completion");
}
-(void)testShareRemind_modifyMyselfSetting{
     LDMyselfModel *myself = MYSELF;
       __block BOOL done = NO;
    [myself modifyMyselfSetting:setting_share completion:^(NSError *error) {
        XCTAssertTrue(!error,@"修改信息分享");
        done = !error;

           }];
    XCTAssertTrue([self.utiles waitFor:&done timeout:3],
                  @"Timed out waiting for response asynch method completion");
}


-(void)testMyselfVerifySetting_modifyMyselfConfigure{

    LDMyselfModel *myself = MYSELF;
    __block BOOL done = NO;

        NSDictionary *verifyDic = @{[NSNumber numberWithInt:config_verify]:@1};
//        [self changeContect:verifyDic stringLab:@"需要验证的信息"];
 
  
        NSDictionary *verifyDic1 = @{[NSNumber numberWithInt:config_verify]:@2};
//        [self changeContect:verifyDic stringLab:@"不允许任何人添加"];
    
        NSDictionary *verifyDic2 = @{[NSNumber numberWithInt:config_verify]:@3};
//        [self changeContect:verifyDic stringLab:@"允许任何人添加"];
    

       [myself modifyMyselfConfigure:verifyDic callBack:^(NSError *error) {
           XCTAssertTrue(!error,@"修改个人，搜索条件");
           done = !error;

            }];

    XCTAssertTrue([self.utiles waitFor:&done timeout:3],
                  @"Timed out waiting for response asynch method completion");
}
-(void)testGetCode{
    LDMyselfModel *myself = MYSELF;
    __block BOOL done = NO;
    
    [myself getCode:@"13109606327" callBack:^(NSError *error) {
        XCTAssertTrue(!error,@"验证码发送成功");
        done = !error;

    }];
    
    XCTAssertTrue([self.utiles waitFor:&done timeout:3],
                  @"Timed out waiting for response asynch method completion");

}
- (void)testPerformanceExample {
    // This is an example of a performance test case.
    [self measureBlock:^{
        // Put the code you want to measure the time of here.
    }];
}

@end
