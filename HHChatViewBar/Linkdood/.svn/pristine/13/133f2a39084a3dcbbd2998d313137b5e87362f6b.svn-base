//
//  LDRobotListModel.m
//  SDKClient
//
//  Created by xiong qing on 16/2/29.
//  Copyright © 2016年 VRV. All rights reserved.
//

#import "LDRobotListModel.h"

@implementation LDRobotListModel{
    LDRobotModel *operRobot;
}

- (void)transformToRequest:(void **)reqData witCmd:(unsigned short)cmd
{
    if  (cmd == imsdk::logic_cmd_addBuddyRequest){
        imsdk::req_addBuddyRequest *req = new imsdk::req_addBuddyRequest();
        req->requestType = 2;
        req->userID = operRobot.ID;
        *reqData = req;
        return;
    }
    if (cmd == imsdk::logic_cmd_opuser){
        imsdk::req_opUser *req = new imsdk::req_opUser();
        req->userID = operRobot.ID;
        req->operType = 3;
        int8_t i = 2;
        req->_set_tinyUserType(i);
        *reqData = req;
        return;
    }
}

-(void)addRobot:(LDRobotModel *)robot completion:(void (^) (NSError *error))completion{
    operRobot = robot;
    [SDKClient sendRequestToSDK:imsdk::logic_cmd_addBuddyRequest postData:self completion:^(void *response) {
        imsdk::resp_commonResult *result = (imsdk::resp_commonResult *)response;
        NSError *error = [NSError errorWithResponse:result->code];
        if (completion) {
            MainQue(completion(error);)
        }
    }];
}

-(void)removeRobot:(LDRobotModel *)robot completion:(void (^) (NSError *error))completion{
    operRobot = robot;
    [SDKClient sendRequestToSDK:imsdk::logic_cmd_opuser postData:self completion:^(void *response) {
        imsdk::resp_commonResult *result = (imsdk::resp_commonResult *)response;
        NSError *error = [NSError errorWithResponse:result->code];
        if (completion) {
            MainQue(completion(error);)
        }
    }];
}


- (void)assembleData
{
    [sections removeAllObjects];
    [assembledItems removeAllObjects];
    [items enumerateObjectsUsingBlock:^(LDItemModel *robot, NSUInteger idx, BOOL * _Nonnull stop) {
        NSString *prefix = [[(LDRobotModel*)robot appName] indexs];
        
        [self addBuddyIndex:prefix forIndexs:sections];
        if (![assembledItems objectForKey:prefix]) {
            [assembledItems setObject:[NSMutableArray arrayWithObject:robot] forKey:prefix];
        }else{
            [[assembledItems objectForKey:prefix] addObject:robot];
        }
    }];
}

- (void)addBuddyIndex:(NSString*)index forIndexs:(NSMutableArray*)indexs;
{
    NSCountedSet *memberIndex = [[NSCountedSet alloc] initWithArray:indexs];
    [memberIndex addObject:index];
    [indexs removeAllObjects];
    [indexs addObjectsFromArray:[[memberIndex allObjects] sortedArrayUsingSelector:@selector(compare:)]];
}

@end
